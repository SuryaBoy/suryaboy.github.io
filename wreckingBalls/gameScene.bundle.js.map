{"version":3,"file":"gameScene.bundle.js","mappings":"qufAaA,MAAMA,UAAkBC,OAAOC,MAE9B,WAAAC,GACCC,MAAM,CAACC,IAAM,YAAaC,QAAO,IACjCC,KAAKC,yBAA2B,KAChCD,KAAKE,IAAM,KACXF,KAAKG,SAAW,IAChBH,KAAKI,UAAY,GACjBJ,KAAKK,QAAS,KACdL,KAAKM,OAAS,IACdN,KAAKO,MAAO,KACZP,KAAKQ,OAAQ,KACbR,KAAKS,UAAW,EAChBT,KAAKU,OAAQ,KACbV,KAAKW,UAAW,KAChBX,KAAKY,UAAY,GACjBZ,KAAKa,SAAW,GAChBb,KAAKc,WAAY,EACjBd,KAAKe,SAAW,KAChBf,KAAKgB,cAAgB,CAACC,KAAK,aACzBC,KAAM,UACNC,MAAM,SACNC,SAAS,CAACC,MAAMrB,KAAKsB,YAAY,KAEnCtB,KAAKuB,oBAAsB,aAC3BvB,KAAKwB,mBAAqB,aAC1BxB,KAAKyB,aAAe,KACpBzB,KAAK0B,YAAc,KACnB1B,KAAK2B,QAAU,KACf3B,KAAK4B,QAAU,KACf5B,KAAKsB,YAAc,KACnBtB,KAAK6B,aAAe,KACpB7B,KAAK8B,aAAe,KACpB9B,KAAK+B,OAAS,KACd/B,KAAKgC,aAAe,EACpBhC,KAAKiC,UAAY,KACjBjC,KAAKkC,YAAa,EAClBlC,KAAKmC,uBAAwB,EAC7BnC,KAAKoC,SAAW,KAChBpC,KAAKqC,gBAAiB,EACtBrC,KAAKsC,SAAW,KAChBtC,KAAKuC,UAAY,KACjBvC,KAAKwC,eAAiB,CACrBvB,KAAK,aACLC,KAAM,UACNC,MAAM,SACNC,SAAS,CAACC,MAAMrB,KAAKsB,YAAY,KAElCtB,KAAKyC,aAAe,KACpBzC,KAAK0C,eAAiB,KACtB1C,KAAK2C,yBAA4B,CAClC,CAEA,IAAAC,CAAKC,GACJ7C,KAAK8C,QAAQC,KAAKC,mBAAmB,WACrChD,KAAKS,UAAW,EAChBT,KAAKe,SAAW,KAChBf,KAAKc,WAAY,EACjBd,KAAKkC,YAAa,CAGnB,CAEA,OAAAe,GAEIjD,KAAKkD,KAAKC,MAAM,OAAQ,GACxBnD,KAAKkD,KAAKC,MAAM,MAAO,GACvBnD,KAAKkD,KAAKC,MAAM,QAAS,GACzBnD,KAAKkD,KAAKC,MAAM,OAAQ,GACxBnD,KAAKkD,KAAKC,MAAM,SAAU,GAE1BnD,KAAKkD,KAAKE,MAAM,aAAa,GAC7BpD,KAAKkD,KAAKE,MAAM,cAAc,GAC9BpD,KAAKkD,KAAKE,MAAM,gBAAgB,GAChCpD,KAAKkD,KAAKE,MAAM,eAAe,GAC/BpD,KAAKkD,KAAKE,MAAM,eAAe,GAClCpD,KAAKkD,KAAKE,MAAM,YAAY,GAC5BpD,KAAKkD,KAAKG,KAAK,aAAc,EAC9B,CAEA,iBAAAC,CAAkBC,GAEhBvD,KAAKE,IAAIsD,aAAaxD,KAAK2C,yBAAyB3C,KAAKE,IAAIuD,EAAEF,EAAQE,GACzE,CAEA,MAAAC,CAAOb,GACN7C,KAAK2D,QAAQC,SAEV5D,KAAK2B,QAAU3B,KAAK6D,MAAMC,YAAYzC,MAAQ,EAC9CrB,KAAK4B,QAAU5B,KAAK6D,MAAMC,YAAYC,OAAS,EACjD/D,KAAKsB,YAActB,KAAK6D,MAAMC,YAAYzC,MAC1CrB,KAAK6B,aAAe7B,KAAK6D,MAAMC,YAAYC,OAEzC/D,KAAKsB,YAAYtB,KAAK6B,aAAe,IACvC7B,KAAKyB,aAAezB,KAAKuB,oBACzBvB,KAAKa,SAAWb,KAAK6B,aAAa,EAClC7B,KAAK2C,yBAA2B,IAIhC3C,KAAKyB,aAAezB,KAAKwB,mBACzBxB,KAAKa,SAAWb,KAAK6B,aAAa,EAClC7B,KAAK2C,yBAA2B,GAGjC3C,KAAKgB,cAAcC,KAAOjB,KAAKyB,aAM5BzB,KAAKE,IAAMF,KAAK2D,QAAQK,IAAIC,OAAOjE,KAAK2B,QAAQ3B,KAAK6B,aAAa,KAAM,OACxE7B,KAAKE,IAAIgE,SAASlE,KAAKsB,aAAa,IAAItB,KAAKG,WAC7CH,KAAKE,IAAIiE,uBAAsB,GAC/BnE,KAAKE,IAAIkE,cAAa,GAEtB,MAAMC,EAAWrE,KAAKgE,IAAIb,MAAM,EAAE,EAAE,SACpCkB,EAASC,SAAS,KAClBD,EAASE,KAAKvE,KAAKsB,YAAc+C,EAASG,aAAa,GACvDH,EAASI,KAAKJ,EAASK,cAAc,GACrCL,EAASM,eAAe,CAACC,eAAc,IACvCP,EAASQ,GAAG,eAAe,IAAM7E,KAAK8E,cAEtC9E,KAAKsC,SAAWtC,KAAKgE,IAAIb,MAAM,EAAE,EAAE,UACnCnD,KAAKsC,SAASgC,SAAS,KACvBtE,KAAKsC,SAASiC,KAAK,EAAIvE,KAAKsC,SAASkC,aAAa,GAClDxE,KAAKsC,SAASmC,KAAKzE,KAAKsC,SAASoC,cAAc,GAC/C1E,KAAKsC,SAASqC,eAAe,CAACC,eAAc,IAC5C5E,KAAKsC,SAASuC,GAAG,eAAe,IAAM7E,KAAK+E,wBAE9C,MAAMC,EAAahF,KAAKiF,MAAM5B,KAAK6B,IAAI,cACvClF,KAAK+B,OAASiD,EAAWjD,OAGtB/B,KAAKO,MAAQP,KAAK2D,QAAQK,IAAImB,QAC9BnF,KAAKoF,aAAapF,KAAKE,KACvBF,KAAK2D,QAAQK,IAAIqB,SAASrF,KAAKO,MAAOP,KAAKE,IAAKF,KAAKsF,eAAe,KAAKtF,MAEzEA,KAAKuF,kBAKLvF,KAAKwF,MAAMX,GAAG,cAAe7E,KAAKsD,kBAAmBtD,MAErDA,KAAKwF,MAAMX,GAAG,cAAe7E,KAAKyF,UAAWzF,MAE7CA,KAAK2D,QAAQ+B,MAAMb,GAAG,cAAe7E,KAAK2F,cAAe3F,MAGtDA,KAAK4F,WAAa5F,KAAK6F,MAAM7B,IAAI,cACjChE,KAAKiC,UAAYjC,KAAK6F,MAAM7B,IAAI,aAChChE,KAAKiC,UAAU6D,OAAS,GACxB9F,KAAKoC,SAAWpC,KAAKwF,MAAMO,SAASC,OAAOtG,OAAOuG,MAAMC,SAASC,SAASC,MAEjF,CAEA,MAAAC,CAAOC,EAAMC,GAENvG,KAAKO,MAAMiG,cAAgB,IACzBxG,KAAKS,UACXT,KAAKyG,YAIIzG,KAAKiC,UAAUyE,WAAc1G,KAAKiC,UAAU0E,UAE5C3G,KAAKS,UAAaT,KAAKkC,YAEtBlC,KAAKiC,UAAU2E,OAIjBlH,OAAOuG,MAAMC,SAASW,SAAS7G,KAAKoC,YAEjB,GAAnBpC,KAAKkC,WACPlC,KAAK8E,YAEL9E,KAAK8G,aAId,CAEA,YAAAC,CAAaC,EAAMC,GAClBjH,KAAK6F,MAAMe,KAAK,cAGV,IADCK,EAAMC,QAAQ,SAEnBlH,KAAKmH,WAAWF,GAUZA,EAAMC,QAAQ,aAAe,EAC/BD,EAAMG,UAGNH,EAAMpE,KAAKwE,OAAOC,SAAWL,EAAMpE,KAAKwE,OAAOC,SAAW,EAKxDtH,KAAKQ,OAAOgG,cAAgB,GAE9BxG,KAAKuH,uBAEV,CAEA,YAAAnC,CAAanB,GACZ,MAAMuD,EAAIvD,EAAOuD,EAAIvD,EAAOS,cAEtBsC,EAAOhH,KAAKO,MAAMmD,OAAOO,EAAOR,EAAG+D,EAAG,QAkB5C,OAhBAR,EAAK9C,SAASlE,KAAKsB,aAAa,IAAItB,KAAKY,YAEzCoG,EAAKS,WAAU,GACfT,EAAKU,YAAW,GACbV,EAAKW,UAAU,GACfX,EAAK7C,uBAAsB,GAE3B6C,EAAKY,cAAe,EACpBZ,EAAKa,KAAKC,eAAgB,EAC1Bd,EAAKe,YAAY,KAKpB/H,KAAK2D,QAAQ+B,MAAMsC,OAAOhB,GAEnB,CACR,CAEA,UAAAG,CAAWlD,GACV,MAAMuD,EAAIvD,EAAOuD,EAAIvD,EAAOS,cAAgB,GACtCjB,EAAIQ,EAAOR,EAAIQ,EAAOO,aAAa,EACnCwC,EAAOhH,KAAKO,MAAMmD,OAAOD,EAAG+D,EAAG,QAgBrC,OAdAR,EAAK9C,SAASlE,KAAKsB,aAAa,IAAItB,KAAKY,YACzCoG,EAAKiB,UAAUjB,EAAK3F,MAAM,GAE1B2F,EAAKS,WAAU,GACfT,EAAKU,YAAW,GACbV,EAAKW,UAAU,GACfX,EAAK7C,uBAAsB,GAE3B6C,EAAKY,cAAe,EACpBZ,EAAKa,KAAKC,eAAgB,EAC1Bd,EAAKkB,YAAY,KAAKlI,KAAKa,UAE9Bb,KAAK2D,QAAQ+B,MAAMsC,OAAOhB,GAC1BhH,KAAK6F,MAAMe,KAAK,gBACT,CACR,CAaA,cAAAtB,CAAe6C,EAAYC,GAEpB,IAAKpI,KAAKc,UACV,CAIC,MAAMuH,EAAYF,EAAWN,KAAKS,KAAKH,EAAWN,KAAKU,UACjDC,EAAaJ,EAAYP,KAAKS,KAAKF,EAAYP,KAAKU,UAE1DH,EAAY5E,aAAoC,KAAtBgF,EAAWH,IACrCI,QAAQC,IAA2B,GAAtBF,EAAWH,GACzB,CACP,CAEA,SAAA5C,CAAUkD,GAGT,GAAqB,GAAlB3I,KAAKc,UAAmB,CACzB,MAAMkG,EAAOhH,KAAKO,MAAMqI,UAAS,GAC9B5B,IACFA,EAAKY,cAAe,EAIjB5H,KAAKE,IAAI2H,KAAKgB,MAAQ,IACxB7B,EAAKkB,YAAYlI,KAAKE,IAAI2H,KAAKiB,SAASrF,EAAE,GAAGzD,KAAK6B,aAAa,GAE/DmF,EAAKkB,YAAY,KAAKlI,KAAK6B,aAAa,GAEzCmF,EAAKW,UAAU,GACfX,EAAKe,YAAY,GACjBf,EAAKiB,UAAUjB,EAAK3F,MAAM,IAG5BrB,KAAKc,WAAY,CAClB,CACA,CAIA,aAAA6E,CAAc1B,EAAO8E,EAAGC,EAAKV,EAAKW,GAI9BD,GAGF/E,EAAOiF,WAAW9B,SAEpB,CAEA,QAAAX,GACCzG,KAAK2D,QAAQwF,QACbnJ,KAAKiC,UAAUkH,QACfnJ,KAAK6F,MAAMe,KAAK,iBAChB5G,KAAKO,MAAM6I,SAASC,SAAQC,IAC3B,MAAMtC,EAAOsC,EACbtC,EAAKa,KAAKC,eAAgB,EAC1B9H,KAAKO,MAAMgJ,YAAYvC,GACvBhH,KAAK2D,QAAQ+B,MAAM8D,YAAYxC,EAAI,IAGpChH,KAAKgB,cAAcI,SAAW,CAACC,MAAQ,GAAIrB,KAAKsB,aACjDtB,KAAKe,SAAWf,KAAKgE,IAAIyF,KAAK,EAAE,EAAE,0CAA2CzJ,KAAKgB,eAClFhB,KAAKe,SAAS2I,YAAY1J,KAAK2B,QAAU3B,KAAKe,SAASM,MAAM,EAAGrB,KAAK4B,QAAU5B,KAAKe,SAASgD,OAAO,GACpG/D,KAAKe,SAAS4D,eAAe,CAACC,eAAc,IAE5C5E,KAAKe,SAAS8D,GAAG,cAAe7E,KAAK2J,YAAY3J,MACjDA,KAAKe,SAAS6I,MAAQ,EACtB5J,KAAK0B,YAAc1B,KAAK6J,cAAc7J,KAAKe,UAE3Cf,KAAKS,UAAW,CAChB,CAED,oBAAAqJ,CAAqBC,GACpB,IAAIC,EAAc,KAGjBA,EADEhK,KAAKsB,YAAYtB,KAAK6B,aAAe,GACxBkI,EAAMC,YAIND,EAAME,aAErB,MAAMC,EAAYC,KAAKC,MAAMpK,KAAKsB,YAAY0I,EAAY,GAAGK,QACvDC,EAAaH,KAAKC,MAAMF,EAAU,KAClC1J,EAASR,KAAK2D,QAAQK,IAAIuG,cAC1BC,EAAQR,EAAYK,OACpBI,EAAQT,EAAY,GAAGK,OACrBK,GAAU1K,KAAKsB,YAAcmJ,EAAQP,GAAW,EACtD,IAAIS,EAAS,EAKZA,EADEH,GAAS,GACDxK,KAAK6B,aAAa,EAAI2I,EAAQF,GAAY,EAG3C,EAGb,IAAK,IAAIM,EAAM,EAAGA,EAAMJ,EAAOI,IAC3B,IAAK,IAAIC,EAAM,EAAGA,EAAMJ,EAAOI,IAAO,CACpC,MAAMpH,EAAIiH,EAASG,EAAMX,EACnB1C,EAAImD,EAASC,EAAMN,EAEzB,GAA6B,GAAzBN,EAAYY,GAAKC,GAAW,CAC/B,MAAMC,EAAYd,EAAYY,GAAKC,GAC7B5D,EAAQjH,KAAK+K,YAAYtH,EAAE+D,EAAE0C,EAAUI,EAAWQ,GACxDtK,EAAOwD,IAAIiD,EACZ,CACF,CAGF,OADAjH,KAAKgE,IAAIgH,SAASxK,GACXA,CACV,CAEA,WAAAuK,CAAYtH,EAAE+D,EAAE0C,EAAUI,EAAWQ,GAEpC,IAAIG,EACAC,EACA5D,EACA6D,EAEJ,OAAOL,GACN,KAAK,EACAG,EAAY,OACZC,EAAc,EACd5D,EAAW,EACX6D,EAAO,EACP,MACL,KAAK,EACAF,EAAY,OACZC,EAAc,EACd5D,EAAW,EACX6D,EAAO,EACP,MACL,QACCF,EAAY,SACZC,EAAc,SACd5D,EAAW,EACX6D,EAAO,EAET,MAAMC,EAAYpL,KAAKgE,IAAIoH,UAAU3H,EAAG+D,EAAG0C,EAAWI,EAAYW,GAKlE,OAJAG,EAAUC,eAAe,EAAGH,GAC5BE,EAAUE,UAAU,EAAG,GACvBF,EAAUG,QAAQ,CAACJ,KAAMA,EAAM7D,SAAUA,IAElC8D,CACR,CAEA,eAAA7F,GACC,MAAMiG,EAAiBxL,KAAK8J,qBAAqB9J,KAAK+B,OAAO/B,KAAKgC,eAGlEhC,KAAKa,SAAWb,KAAKa,SAAWb,KAAK+B,OAAO/B,KAAKgC,cAAcyJ,kBAI/DzL,KAAKQ,OAAS,KACdR,KAAKQ,OAASgL,EACdxL,KAAK2D,QAAQC,SACb5D,KAAK2D,QAAQK,IAAIqB,SAASrF,KAAKO,MAAMP,KAAKQ,OAAQR,KAAK+G,aAAa,KAAK/G,MACzEA,KAAK0L,UAAU1L,KAAKuC,UAAU,MAC9BvC,KAAKuC,UAAYvC,KAAKgE,IAAIyF,KAAK,EAAE,EACjC,UAAWzJ,KAAKgC,aAAa,GAAGhC,KAAKwC,gBACrCxC,KAAKuC,UAAUmH,YAAY1J,KAAK2B,QAAU3B,KAAKuC,UAAUlB,MAAM,EAC7DrB,KAAKuC,UAAUwB,OAAO,GACxB/D,KAAKuC,UAAUqH,MAAM,EACrB5J,KAAK6J,cAAc7J,KAAKuC,UAEzB,CAEA,qBAAAgF,GACCvH,KAAKgC,eACLhC,KAAK6F,MAAMe,KAAK,gBAEhB5G,KAAKmC,uBAAwB,EACzBnC,KAAKgC,aAAehC,KAAK+B,OAAOsI,QAEnCrK,KAAK2D,QAAQwF,QAEbnJ,KAAKwF,MAAMmG,eAAe,cAAc3L,KAAK4L,UAAU5L,MACvDA,KAAK6L,eACL7L,KAAKe,SAAWf,KAAKgE,IAAIyF,KAAK,EAAE,EAChC,+CACC,CAACxI,KAAKjB,KAAKyB,aACXP,KAAM,UACNC,MAAM,SACNC,SAAS,CAACC,MAAM,GAAIrB,KAAKsB,eAE1BtB,KAAKe,SAAS2I,YAAY1J,KAAK2B,QAAU3B,KAAKe,SAASM,MAAM,EAC3DrB,KAAK4B,QAAU5B,KAAKe,SAASgD,OAAO,GACtC/D,KAAKe,SAAS4D,eAAe,CAACC,eAAc,IAC5C5E,KAAKe,SAAS8D,GAAG,cAAe7E,KAAK8L,aAAa9L,OAEjDA,KAAK+L,SAER,CAEA,YAAAF,GACI7L,KAAKE,IAAIwJ,YAAY1J,KAAK2B,QAAQ3B,KAAK6B,aAAa,MACpD7B,KAAKO,MAAMyL,OAAM,GAAK,GACtBhM,KAAKoF,aAAapF,KAAKE,KACvBF,KAAKc,WAAY,CACrB,CAMA,SAAA4K,CAAUO,EAAQC,GACdD,IACFA,EAAQE,QAAQ,IAChBF,EAAQN,iBACLO,GACFlM,KAAKoM,aAAaF,GAGrB,CAEA,OAAAH,GACI/L,KAAK2D,QAAQwF,QACbnJ,KAAKiC,UAAUkH,QAClBnJ,KAAKe,SAAWf,KAAKgE,IAAIyF,KAAK,EAAE,EAC/B,kDACC,CAACxI,KAAKjB,KAAKyB,aACXP,KAAM,UACNC,MAAM,SACNC,SAAS,CAACC,MAAM,GAAIrB,KAAKsB,eAE3BtB,KAAKe,SAAS2I,YAAY1J,KAAK2B,QAAU3B,KAAKe,SAASM,MAAM,EAC5DrB,KAAK4B,QAAU5B,KAAKe,SAASgD,OAAO,GACrC/D,KAAKe,SAAS4D,eAAe,CAACC,eAAc,IAC5C5E,KAAKe,SAAS6I,MAAQ,EACtB5J,KAAKe,SAAS8D,GAAG,cAAe7E,KAAKqM,YAAYrM,KAClD,CAGA,YAAA8L,GACC9L,KAAK0L,UAAU1L,KAAKe,SAASf,KAAK0B,aAClC1B,KAAK6F,MAAMe,KAAK,eAChB5G,KAAKuF,kBACLvF,KAAKS,UAAW,EAChBT,KAAKmC,uBAAwB,EAEPnC,KAAKsG,KAAKgG,SAAS,CAClCC,MAAO,IACPC,SAAUxM,KAAKyM,iBACfC,cAAe1M,MAGvB,CAEA,gBAAAyM,GACCzM,KAAKwF,MAAMX,GAAG,cAAc7E,KAAKyF,UAAUzF,KAC5C,CAEA,SAAA8E,GACK9E,KAAKS,UAAcT,KAAKmC,wBAC3BnC,KAAKkC,YAAa,EAClBlC,KAAKiC,UAAUkH,QACfnJ,KAAK2D,QAAQwF,QACVnJ,KAAKe,UACPf,KAAK0L,UAAU1L,KAAKe,SAASf,KAAK0B,aAEnC1B,KAAKe,SAAWf,KAAKgE,IAAIyF,KAAK,EAAE,EAC/B,iCACC,CAACxI,KAAKjB,KAAKyB,aACXP,KAAM,UACNC,MAAM,SACNC,SAAS,CAACC,MAAM,GAAIrB,KAAKsB,eAE3BtB,KAAKe,SAAS2I,YAAY1J,KAAK2B,QAAU3B,KAAKe,SAASM,MAAM,EAC5DrB,KAAK4B,QAAU5B,KAAKe,SAASgD,OAAO,GACpC/D,KAAKe,SAAS6I,MAAQ,EACvB5J,KAAKe,SAAS4D,eAAe,CAACC,eAAc,IAC5C5E,KAAKe,SAAS8D,GAAG,cAAe7E,KAAK8G,WAAY9G,MAEjDA,KAAK0B,YAAc1B,KAAK6J,cAAc7J,KAAKe,UAE7C,CAEA,UAAA+F,GACI9G,KAAKe,UACPf,KAAK0L,UAAU1L,KAAKe,SAASf,KAAK0B,aAEnC1B,KAAKiC,UAAU2B,SACf5D,KAAKkC,YAAa,EAElBlC,KAAK2D,QAAQC,SACb5D,KAAK6F,MAAMe,KAAK,cAEjB,CAGA,aAAAiD,CAAeoC,GACd,MAAMU,EAASV,EAAQW,YAEvB,IAAIV,EAAa,KAcjB,OAbAA,EAAalM,KAAKgE,IAAIoH,UAAUuB,EAAOlJ,EAAGkJ,EAAOnF,EAAGmF,EAAOtL,MAAQ,GAAIsL,EAAO5I,OAAS,EAFtE,GAGjBmI,EAAWxC,YAAYiD,EAAOlJ,EAAIkJ,EAAOtL,MAAM,EAAGsL,EAAOnF,EAAImF,EAAO5I,OAAO,GAC3EmI,EAAWW,MAAQ,GACnBX,EAAWnM,QAAS,EAUbmM,CACR,CAGA,YAAAE,CAAcF,GACVA,IACFA,EAAWnM,QAAS,EACpBC,KAAK8M,MAAMC,OAAOb,GAClBA,EAAW9E,UAMb,CAEA,mBAAArC,GACK/E,KAAKqC,gBAORrC,KAAKsC,SAAS0K,WAAW,UACzBhN,KAAKqC,gBAAiB,EACtBrC,KAAK6F,MAAMoH,SAAQ,KAPnBjN,KAAKsC,SAAS0K,WAAW,QACzBhN,KAAKqC,gBAAiB,EACtBrC,KAAK6F,MAAMoH,SAAQ,GAOrB,CAEA,WAAAtD,GACC3J,KAAKQ,OAAOwL,OAAM,GAClBhM,KAAK8L,eACL9L,KAAKwF,MAAMmG,eAAe,cAAc3L,KAAK4L,UAAU5L,MACvDA,KAAK6L,eACL7L,KAAKiC,UAAU2B,QAChB,CAEA,WAAAyI,GACCrM,KAAKgC,aAAe,EACpBhC,KAAK8L,eACL9L,KAAKwF,MAAMmG,eAAe,cAAc3L,KAAK4L,UAAU5L,MACvDA,KAAK6L,eACL7L,KAAKiC,UAAU2B,QAChB,EAKD,S","sources":["webpack://WreckingBalls/./src/gameScene.js"],"sourcesContent":["import ballImg from './assets/ball3.png';\r\nimport panImg from './assets/pan3.png';\r\nimport pauseImg from './assets/pause.png';\r\nimport muteImg from './assets/mute.png';\r\nimport unMuteImg from './assets/unMute.png';\r\nimport brickAudio from './assets/brickSound.ogg';\r\nimport selectAudio from './assets/select.ogg';\r\nimport gameOverAudio from './assets/gameOver.ogg';\r\nimport levelUpAudio from './assets/levelUp.ogg';\r\nimport powerUpAudio from './assets/powerUp.ogg';\r\nimport gameMusic from './assets/gameMusic.mp3';\r\nimport levelsData from './levels.json';\r\n\r\nclass GameScene extends Phaser.Scene {\r\n\r\n\tconstructor() {\r\n\t\tsuper({key : 'GameScene', active:false})\r\n\t\tthis.gameSceneBackgroundImage = null;\r\n\t\tthis.pan = null;\r\n\t\tthis.panWidth = 100;\r\n\t\tthis.panHeight = 25;\r\n\t\tthis.cursors =null;\r\n\t\tthis.panVel = 100;\r\n\t\tthis.balls =null;\r\n\t\tthis.bricks =null;\r\n\t\tthis.gameover = false;\r\n\t\tthis.ground =null;\r\n\t\tthis.platforms =null;\r\n\t\tthis.ballWidth = 25;\r\n\t\tthis.ballYVel = 10;\r\n\t\tthis.ballOnPan = true;\t\r\n\t\tthis.gameText = null;\r\n\t\tthis.gameTextStyle = {font:'40px Arial',\r\n\t\t\t\tfill: '#e6e150',\r\n\t\t\t\talign:'center',\r\n\t\t\t\twordWrap:{width:this.screenWidth/0.8},\r\n\t\t\t};\r\n\t\tthis.gameTextFontDesktop = '40px Arial'\r\n\t\tthis.gameTextFontMobile = '30px Arial'\r\n\t\tthis.gameTextFont = null;\r\n\t\tthis.gameTextBox = null;\r\n\t\tthis.centerX = null;\r\n\t\tthis.centerY = null;\r\n\t\tthis.screenWidth = null;\r\n\t\tthis.screenHeight = null;\r\n\t\tthis.staticBricks = null;\r\n\t\tthis.levels = null;\r\n\t\tthis.currentLevel = 0;\r\n\t\tthis.gameMusic = null;\r\n\t\tthis.gamePaused = false;\r\n\t\tthis.gameInLevelTransition = false;\r\n\t\tthis.spacebar = null;\r\n\t\tthis.gameSoundMuted = false;\r\n\t\tthis.soundBtn = null;\r\n\t\tthis.levelText = null;\r\n\t\tthis.levelTextStyle = {\r\n\t\t\tfont:'18px Arial',\r\n\t\t\tfill: '#ffffff',\r\n\t\t\talign:'center',\r\n\t\t\twordWrap:{width:this.screenWidth/0.8},\r\n\t\t}\r\n\t\tthis.levelTextBox = null;\r\n\t\tthis.platformForPan = null;\r\n\t\tthis.pointerMovementConstant  = -2;\r\n\t}\r\n\r\n\tinit(data) {\r\n\t\tthis.cameras.main.setBackgroundColor('#000000');\r\n\t\tthis.gameover = false;\r\n\t\tthis.gameText = null;\r\n\t\tthis.ballOnPan = true;\r\n\t\tthis.gamePaused = false;\r\n\t\t// console.log('In the init function , Ball on pan status : ' + this.ballOnPan)\r\n\t\t// this.ball = null;\r\n\t}\r\n\r\n\tpreload() {\r\n\t\t// console.log(\"gameScene\");\r\n\t    this.load.image('ball', ballImg);\r\n\t    this.load.image('pan', panImg);\r\n\t    this.load.image('pause', pauseImg);\r\n\t    this.load.image('mute', muteImg);\r\n\t    this.load.image('unMute', unMuteImg);\r\n\t    // this.load.audio('panSound','../assets/panSound.ogg')\r\n\t    this.load.audio('brickSound',brickAudio)\r\n\t    this.load.audio('selectSound',selectAudio)\r\n\t    this.load.audio('gameOverSound',gameOverAudio)\r\n\t    this.load.audio('levelUpSound',levelUpAudio)\r\n\t    this.load.audio('powerUpSound',powerUpAudio)\r\n\t\tthis.load.audio('gameMusic',gameMusic)\r\n\t\tthis.load.json('levelsData', levelsData);\r\n\t}\r\n\r\n\thandlePointerMove(pointer) {\r\n\t  // Update sprite's x position based on mouse movement\r\n\t  this.pan.setVelocityX(this.pointerMovementConstant*(this.pan.x-pointer.x)) ;\r\n\t}\r\n\r\n\tcreate(data) {\r\n\t\tthis.physics.resume();\r\n\t    // Get the center position of the game screen\r\n\t    this.centerX = this.scale.displaySize.width / 2;\r\n\t    this.centerY = this.scale.displaySize.height / 2;\r\n \t\tthis.screenWidth = this.scale.displaySize.width;\r\n \t\tthis.screenHeight = this.scale.displaySize.height;\r\n\r\n\t\tif(this.screenWidth/this.screenHeight > 0.6) {\r\n\t\t\tthis.gameTextFont = this.gameTextFontDesktop\r\n\t\t\tthis.ballYVel = this.screenHeight/2\r\n\t\t\tthis.pointerMovementConstant = -2\r\n\t\t} \r\n\t\t// for mobile phone screen in potrait\r\n\t\telse {\r\n\t\t\tthis.gameTextFont = this.gameTextFontMobile\r\n\t\t\tthis.ballYVel = this.screenHeight/3\r\n\t\t\tthis.pointerMovementConstant = -6\r\n\t\t}\r\n\t\t// setting the font size after getting screen dimensions\r\n\t\tthis.gameTextStyle.font = this.gameTextFont\r\n\r\n\t    // const lineForPan = this.add.line(0,0,0,this.screenHeight/1.1,this.screenWidth,this.screenHeight/1.1,0xffffff)\r\n\t    // lineForPan.setX(0 + lineForPan.displayWidth/2)\r\n\t    // lineForPan.body = Phaser.Physics.Arcade.StaticBody;\r\n\r\n\t    this.pan = this.physics.add.sprite(this.centerX,this.screenHeight/1.12, 'pan');\r\n\t    this.pan.setScale(this.screenWidth/(900+this.panWidth));\r\n\t    this.pan.setCollideWorldBounds(true);\r\n\t    this.pan.setImmovable(true);\r\n\r\n\t    const pauseBtn = this.add.image(0,0,'pause'); \r\n\t    pauseBtn.setDepth(100);\r\n\t    pauseBtn.setX(this.screenWidth - pauseBtn.displayWidth/2)\r\n\t    pauseBtn.setY(pauseBtn.displayHeight/2)\r\n\t    pauseBtn.setInteractive({useHandCursor:true})\r\n\t    pauseBtn.on('pointerdown', () => this.gamePause())\r\n\r\n\t    this.soundBtn = this.add.image(0,0,'unMute');\r\n\t    this.soundBtn.setDepth(100)\r\n\t    this.soundBtn.setX(0 + this.soundBtn.displayWidth/2)\r\n\t    this.soundBtn.setY(this.soundBtn.displayHeight/2)\r\n\t    this.soundBtn.setInteractive({useHandCursor:true})\r\n\t    this.soundBtn.on('pointerdown', () => this.gameSoundMuteToggle())\r\n\r\n\t\tconst levelsData = this.cache.json.get('levelsData');\r\n\t\tthis.levels = levelsData.levels;\r\n\r\n\t\t// console.log(this.levels);\r\n\t    this.balls = this.physics.add.group();\r\n\t    this.addBallonPan(this.pan)\r\n\t    this.physics.add.collider(this.balls, this.pan, this.panBallCollide,null,this);\r\n    \t    // Initialize the first level\r\n    \tthis.initializeLevel();\r\n\t    // this.physics.add.collider(this.balls,this.bricks, this.ballHitBrick,null,this)\r\n\t    //  Input Events\r\n\r\n\t    // Enable mouse input\r\n\t    this.input.on('pointermove', this.handlePointerMove, this);\r\n\r\n\t    this.input.on('pointerdown', this.shootBall, this);\r\n\r\n\t    this.physics.world.on('worldbounds', this.collidedWorld, this);\r\n\r\n        // this.panSound = this.sound.add('panSound');\r\n        this.brickSound = this.sound.add('brickSound');\r\n        this.gameMusic = this.sound.add('gameMusic');\r\n        this.gameMusic.volume = 0.5\r\n        this.spacebar = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE);\r\n        // this.input.keyboard.on('keydown-SPACE', this.gamePause,this)\r\n\t}\r\n\r\n\tupdate(time, delta) {\r\n\t\t// console.log(\"Delta : \" + delta)\r\n\t    if(this.balls.countActive() < 1) {\r\n    \t\tif(!this.gameover) {\r\n\t\t\t\tthis.gameOver();\r\n    \t\t}\r\n\t\t\t// console.log('gameover')\r\n\t    }\r\n        if (!this.gameMusic.isPlaying && !this.gameMusic.isPaused)\r\n        {\t\r\n        \tif(!this.gameover || !this.gamePaused)\r\n            \t{\r\n            \t\tthis.gameMusic.play();\r\n            \t}\r\n        }\r\n\r\n        if (Phaser.Input.Keyboard.JustDown(this.spacebar))\r\n        {\r\n        \tif(this.gamePaused == false) {\r\n        \t\tthis.gamePause();\r\n        \t} else {\r\n        \t\tthis.gameResume();\r\n        \t}\r\n        }\r\n\r\n\t}\r\n\r\n\tballHitBrick(ball, brick) {\r\n\t\tthis.sound.play('brickSound')\r\n\t    // first of all get the item data from brick to check if it has item    \r\n\t\tswitch(brick.getData('item')) {\r\n\t\t\tcase 1:\r\n\t\t\t\tthis.createBall(brick)\r\n\t\t      break;\r\n\t\t\tcase 2:\r\n\r\n\t\t      break;\r\n\t\t\tdefault:\r\n\t\t\t\t// nothing\r\n\t\t}\t    \r\n\r\n\t    // For example, you can remove the brick and change the ball's velocity\r\n\t    if(brick.getData('strength') <= 1) {\r\n\t    \tbrick.destroy(); // Remove the brick\r\n\t    \t// console.log(\"brick destroyed\")\t\r\n\t    } else {\r\n\t    \tbrick.data.values.strength = brick.data.values.strength - 1;\r\n\t    }\r\n\r\n\t    // console.log(this.bricks.countActive())\r\n\t    // if all the bricks are hit\r\n\t    if(this.bricks.countActive() < 1) {\r\n\r\n    \t\tthis.transitionToNextLevel()\r\n\t    }\r\n\t}\t\r\n\r\n\taddBallonPan(sprite) {\r\n\t\tconst y = sprite.y - sprite.displayHeight\r\n\t\t\r\n\t\tconst ball = this.balls.create(sprite.x, y, 'ball');\r\n\t\t//scalling the ball according the screen width \r\n\t\tball.setScale(this.screenWidth/(900+this.ballWidth));\r\n\t\t// set active and visible\r\n\t\tball.setActive(true)\r\n\t\tball.setVisible(true)\r\n\t    ball.setBounce(0);\r\n\t    ball.setCollideWorldBounds(true);\r\n\r\n\t    ball.allowGravity = true;\r\n\t    ball.body.onWorldBounds = true;\r\n\t    ball.setGravityY(100);\r\n\t\t// this.add.existing(carrot)\r\n\t\t// update the physics body size\r\n\t\t// carrot.body.setSize(carrot.width, carrot.height)\r\n\t\t// make sure body is enabed in the physics world\r\n\t\tthis.physics.world.enable(ball)\r\n\r\n\t\treturn (ball)\r\n\t}\r\n\r\n\tcreateBall(sprite) {\r\n\t\tconst y = sprite.y + sprite.displayHeight + 20\r\n\t\tconst x = sprite.x + sprite.displayWidth/2\r\n\t\tconst ball = this.balls.create(x, y, 'ball');\r\n\t\t//scalling the ball according the screen width \r\n\t\tball.setScale(this.screenWidth/(900+this.ballWidth));\r\n\t\tball.setCircle(ball.width/2);\r\n\t\t// set active and visible\r\n\t\tball.setActive(true)\r\n\t\tball.setVisible(true)\r\n\t    ball.setBounce(1);\r\n\t    ball.setCollideWorldBounds(true);\r\n\r\n\t    ball.allowGravity = false;\r\n\t    ball.body.onWorldBounds = true;\r\n\t    ball.setVelocity(100,-this.ballYVel)\r\n\r\n\t\tthis.physics.world.enable(ball)\r\n\t\tthis.sound.play('powerUpSound')\r\n\t\treturn (ball)\r\n\t}\r\n\r\n\t// resetScene() {\r\n\r\n\t//     this.pan.setPosition(this.centerX,this.cameras.main.height);\r\n\t//     this.ballOnPan = true;\r\n\t//     this.currentLevel = 0;\r\n\t//     this.physics.resume();\r\n\t    \r\n\t//     this.scene.restart();\r\n\t//     this.scene.switch('SplashScene');\r\n\t// }\r\n\r\n\tpanBallCollide(panCollide, ballCollide) {\r\n\t\t// only if the ball is not on pan that means only after the ball has been shot\r\n        if (!this.ballOnPan)\r\n        {\r\n        \t// console.log(panCollide.getBounds()) ;\r\n        \t// console.log()\r\n        \t// console.log()\r\n        \tconst panCenter = panCollide.body.left+panCollide.body.halfWidth;\r\n        \tconst ballCenter = ballCollide.body.left+ballCollide.body.halfWidth;\r\n        \t// console.log(ballCollide.body.deltaX())\r\n        \tballCollide.setVelocityX((ballCenter-panCenter)*3.5)\r\n        \tconsole.log((ballCenter-panCenter)*4)\r\n        }\r\n\t}\r\n\r\n\tshootBall(the_ball) {\r\n\t\t// console.log(\"On shoot Ball, ball on pan = \" + this.ballOnPan)\r\n\t\t// console.log(\"pan velocity = \" + this.pan.body.velocity.x)\r\n\t\tif(this.ballOnPan == true) {\r\n\t\t\t\tconst ball = this.balls.getFirst(true)\r\n\t\t\t\tif(ball) {\r\n\t\t\t\t\tball.allowGravity = false;\r\n\t\t\t\t\t//if pan velocity is greater than 100 set the velocity\r\n\t\t\t\t\t// as its x velocity else give a 100 velocity to ball \r\n\t\t\t\t\t// to avoid ball going directly up with no x velocity\r\n\t\t\t\t\tif(this.pan.body.speed > 100) {\r\n\t\t\t\t\t\tball.setVelocity(this.pan.body.velocity.x/2,-this.screenHeight/2);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tball.setVelocity(100,-this.screenHeight/2);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tball.setBounce(1);\r\n\t\t\t\t\tball.setGravityY(0);\r\n\t\t\t\t\tball.setCircle(ball.width/2);\r\n\t\t\t\t}\r\n\r\n\t\t\tthis.ballOnPan = false;\r\n\t\t}\r\n \t}\r\n\r\n \t// listener for pan if it collides with the world \r\n \t// for checking if it collids with the ground or bottom of the world\r\n \tcollidedWorld(sprite,up,down,left,right) {\r\n \t\t// console.log('Collided World');\r\n \t\t// console.log('Ball bottom collide : ' + down);\r\n \t\t// console.log(sprite)\r\n \t\tif(down) {\r\n \t\t\t// destroying the sprite \r\n \t\t\t// which is the ball in most case\r\n \t\t\tsprite.gameObject.destroy();\r\n \t\t}\r\n \t}\r\n\r\n \tgameOver() {\r\n \t\tthis.physics.pause();\r\n \t\tthis.gameMusic.pause();\r\n \t\tthis.sound.play('gameOverSound');\r\n\t\t\tthis.balls.children.iterate(child => {\r\n\t\t\t\tconst ball = child\r\n\t\t\t\tball.body.onWorldBounds = false\r\n\t\t\t\tthis.balls.killAndHide(ball)\r\n\t\t\t\tthis.physics.world.disableBody(ball)\r\n\t\t\t})\r\n \t\t// this.physics.world.disableBody(this.ball);\r\n \t\tthis.gameTextStyle.wordWrap = {width : 0.9*this.screenWidth}\r\n\t\tthis.gameText = this.add.text(0,0,'Game Over! \\n Click to Replay the Level', this.gameTextStyle);\r\n\t\tthis.gameText.setPosition(this.centerX - this.gameText.width/2, this.centerY - this.gameText.height/2);\r\n\t\tthis.gameText.setInteractive({useHandCursor:true});\r\n\t\t// this.gameText.on('pointerdown', this.resetScene,this);\r\n\t\tthis.gameText.on('pointerdown', this.replayLevel,this);\r\n\t\tthis.gameText.depth = 1;\r\n\t\tthis.gameTextBox = this.createTextbox(this.gameText);\r\n\r\n\t\tthis.gameover = true;\r\n \t}\r\n\r\n\tcreateBricksForLevel(level) {\r\n\t\tlet brickLayout = null;\r\n\t\t// for laptops \r\n\t\tif(this.screenWidth/this.screenHeight > 0.6) {\r\n\t\t\tbrickLayout  = level.brickLayout; // it represents the number of columns in the array\r\n\t\t} \r\n\t\t// for mobile phone screen\r\n\t\telse {\r\n\t\t\tbrickLayout  = level.brickLayoutM;\r\n\t\t}\r\n \t\tconst cellWidth = Math.floor(this.screenWidth/brickLayout[0].length);\r\n \t\tconst cellHeight = Math.floor(cellWidth/2.5);\r\n \t\tconst bricks = this.physics.add.staticGroup();\r\n \t\tconst nRows = brickLayout.length;\r\n \t\tconst nCols = brickLayout[0].length;\r\n\t    const startX = (this.screenWidth - nCols * cellWidth)/2;\r\n\t    let startY = 0;\r\n\r\n\t    // if number of rows is less than or equal to 6\r\n\t    // its for adjusting the brick vertical placement \r\n\t    if(nRows <= 6) {\r\n\t    \tstartY = (this.screenHeight/3 - nRows * cellHeight)/2;\r\n\t    } else {\r\n\t    \t// startY = (this.screenHeight - nRows * cellHeight)/2;\r\n\t    \tstartY = 0\r\n\t    }\r\n\t    \r\n\t\tfor (let row = 0; row < nRows; row++) {\r\n\t\t    for (let col = 0; col < nCols; col++) {\r\n\t\t      const x = startX + col * cellWidth;\r\n\t\t      const y = startY + row * cellHeight;\r\n\t\t      // create brick for the number except 0\r\n\t\t      if (brickLayout[row][col] != 0) {\r\n\t\t      \tconst brickType = brickLayout[row][col] ;\r\n\t\t      \tconst brick = this.createBrick(x,y,cellWidth,cellHeight,brickType) ;\r\n\t\t      \tbricks.add(brick);\r\n\t\t      }\r\n\t\t    }\r\n\t  \t}\r\n\t  \tthis.add.existing(bricks);\r\n\t  \treturn bricks;\r\n\t}\r\n\r\n\tcreateBrick(x,y,cellWidth,cellHeight,brickType) {\r\n\t\t// Define properties based on the brick type\r\n\t\tlet fillColor;\r\n\t\tlet strokeColor;\r\n\t\tlet strength;\r\n\t\tlet item;\r\n\r\n\t\tswitch(brickType) {\r\n\t\t\tcase 1:\r\n\t\t      fillColor = 0x8bd4e0; \r\n\t\t      strokeColor = 0x000000;\r\n\t\t      strength = 1;\r\n\t\t      item = 0;\r\n\t\t      break;\r\n\t\t\tcase 2:\r\n\t\t      fillColor = 0x8bd4e0; \r\n\t\t      strokeColor = 0x000000;\r\n\t\t      strength = 1;\r\n\t\t      item = 1;\r\n\t\t      break;\r\n\t\t\tdefault:\r\n\t\t\t\tfillColor = 0xffffff; // Default to white\r\n\t\t\t\tstrokeColor = 0xaaaaaa;\r\n\t\t\t\tstrength = 1;\r\n\t\t\t\titem = 0;\r\n\t\t}\r\n\t\tconst rectangle = this.add.rectangle(x, y, cellWidth, cellHeight, fillColor);\r\n\t\trectangle.setStrokeStyle(2, strokeColor);\r\n\t\trectangle.setOrigin(0, 0);\r\n\t\trectangle.setData({item: item, strength: strength});\r\n\r\n\t\treturn rectangle;\r\n\t}\r\n\r\n\tinitializeLevel() {\r\n\t\tconst bricksForLevel = this.createBricksForLevel(this.levels[this.currentLevel]);\r\n\r\n\t\t// initialize the velocity of ball based on the level\r\n\t\tthis.ballYVel = this.ballYVel + this.levels[this.currentLevel].velocityIncrement;\r\n\t\t// Other level-specific setup\r\n\r\n\t\t// Add bricksForLevel to your scene as needed\r\n\t\tthis.bricks = null;\r\n\t\tthis.bricks = bricksForLevel;\r\n\t\tthis.physics.resume();\r\n\t\tthis.physics.add.collider(this.balls,this.bricks, this.ballHitBrick,null,this)\r\n\t\tthis.clearText(this.levelText,null)\r\n\t\tthis.levelText = this.add.text(0,0,\r\n\t\t'Level '+ (this.currentLevel+1),this.levelTextStyle);\r\n\t\tthis.levelText.setPosition(this.centerX - this.levelText.width/2,\r\n \t\t\tthis.levelText.height/2);\r\n\t\tthis.levelText.depth=1;\r\n\t\tthis.createTextbox(this.levelText);\r\n\r\n\t}\r\n\r\n\ttransitionToNextLevel() {\r\n\t\tthis.currentLevel++;\r\n\t\tthis.sound.play('levelUpSound')\r\n\t\t// to indicate that game is about to level up state\r\n\t\tthis.gameInLevelTransition = true;\r\n\t\tif (this.currentLevel < this.levels.length) {\r\n\t\t\t\r\n\t\t\tthis.physics.pause();\r\n\t\t\t//remove the shootball function on pointer down as we are transiting towards nextlevel\r\n\t\t\tthis.input.removeListener('pointerdown',this.shootball,this)\r\n\t\t\tthis.resetBallPan();\r\n\t\t\tthis.gameText = this.add.text(0,0,\r\n\t\t\t'Congratulations \\n Click To Play Next Level.',\r\n\t\t\t {font:this.gameTextFont,\r\n\t\t\t fill: '#12c20c',\r\n\t\t\t align:'center',\r\n\t\t\t wordWrap:{width:0.9*this.screenWidth},\r\n\t\t\t});\r\n\t\t\tthis.gameText.setPosition(this.centerX - this.gameText.width/2,\r\n\t \t\t\tthis.centerY - this.gameText.height/2);\r\n\t\t\tthis.gameText.setInteractive({useHandCursor:true});\r\n\t\t\tthis.gameText.on('pointerdown', this.refreshScene,this);\r\n\t\t} else {\r\n\t\t  this.victory();\r\n\t\t}\r\n\t}\r\n\r\n\tresetBallPan() {\r\n\t    this.pan.setPosition(this.centerX,this.screenHeight/1.12 );\r\n\t    this.balls.clear(true,true);\r\n\t    this.addBallonPan(this.pan);\r\n\t    this.ballOnPan = true;\r\n\t}\r\n\r\n\t// the clearText method clears the text\r\n\t// also removes listeners if any\r\n\t// also clears the custom text box if any\r\n\t// the text variable need to be sent as argument\r\n\tclearText(theText,theTextBox) {\r\n\t\tif(theText) {\r\n\t\t\ttheText.setText('');\r\n\t\t\ttheText.removeListener();\r\n\t\t\tif(theTextBox) {\r\n\t\t\t\tthis.clearTextbox(theTextBox);\r\n\t\t\t}\t\t\r\n\t\t}\r\n\t}\r\n\r\n\tvictory() {\r\n    \tthis.physics.pause();\r\n    \tthis.gameMusic.pause();\r\n\t\tthis.gameText = this.add.text(0,0,\r\n\t\t\t'Congratulations You Won \\n Click to Play Again.',\r\n\t\t\t {font:this.gameTextFont,\r\n\t\t\t fill: '#12c20c',\r\n\t\t\t align:'center',\r\n\t\t\t wordWrap:{width:0.9*this.screenWidth},\r\n\t\t\t});\r\n\t\tthis.gameText.setPosition(this.centerX - this.gameText.width/2,\r\n\t \tthis.centerY - this.gameText.height/2);\r\n\t\tthis.gameText.setInteractive({useHandCursor:true});\r\n\t\tthis.gameText.depth = 1;\r\n\t\tthis.gameText.on('pointerdown', this.restartGame,this);\r\n\t}\r\n\r\n\t// before transiting to next level refresh the objects:\r\n\trefreshScene() {\r\n\t\tthis.clearText(this.gameText,this.gameTextBox);\r\n\t\tthis.sound.play('selectSound');\r\n\t\tthis.initializeLevel();\r\n\t\tthis.gameover = false;\r\n\t\tthis.gameInLevelTransition = false;\r\n\t\t// as the level has been initialized now when mouse is clicked the ball shoots\r\n\t    const timerEvent = this.time.addEvent({\r\n\t        delay: 500,\r\n\t        callback: this.delayPointerdown,\r\n\t        callbackScope: this,\r\n\t    });\r\n\t\t// this.input.on('pointerdown',this.shootBall,this)\r\n\t}\r\n\r\n\tdelayPointerdown() {\r\n\t\tthis.input.on('pointerdown',this.shootBall,this)\r\n\t}\r\n\r\n\tgamePause () {\r\n\t\tif(!this.gameover  && !this.gameInLevelTransition) {\r\n\t\t\tthis.gamePaused = true;\r\n\t\t\tthis.gameMusic.pause();\r\n\t\t\tthis.physics.pause();\r\n\t\t\tif(this.gameText) {\r\n\t\t\t\tthis.clearText(this.gameText,this.gameTextBox)\t\r\n\t\t\t}\r\n\t\t\tthis.gameText = this.add.text(0,0,\r\n\t\t\t\t'Game Paused \\n Click to Resume',\r\n\t\t\t\t {font:this.gameTextFont,\r\n\t\t\t\t fill: '#f0781d',\r\n\t\t\t\t align:'center',\r\n\t\t\t\t wordWrap:{width:0.9*this.screenWidth},\r\n\t\t\t\t});\r\n\t\t\tthis.gameText.setPosition(this.centerX - this.gameText.width/2,\r\n\t\t \tthis.centerY - this.gameText.height/2);\r\n\t\t \tthis.gameText.depth = 1;\r\n\t\t\tthis.gameText.setInteractive({useHandCursor:true});\r\n\t\t\tthis.gameText.on('pointerdown', this.gameResume ,this);\r\n\t\t\t// this.input.once.keyboard.on('keydown-SPACE', this.gameResume,this)\r\n\t\t\tthis.gameTextBox = this.createTextbox(this.gameText)\r\n\t\t}\r\n\t}\r\n\r\n\tgameResume () {\r\n\t\tif(this.gameText) {\r\n\t\t\tthis.clearText(this.gameText,this.gameTextBox)\r\n\t\t}\r\n\t\tthis.gameMusic.resume();\r\n\t\tthis.gamePaused = false;\r\n\t\t// this.clearTextbox(this.gameTextBox);\r\n\t\tthis.physics.resume();\r\n\t\tthis.sound.play('selectSound');\r\n\t\t// this.input.once.keyboard.on('keydown-SPACE', this.gamePause,this)\r\n\t}\r\n\r\n\t// takes the argument text and returns a rectangle with transparent black color as background\r\n\tcreateTextbox (theText) {\r\n\t\tconst bounds = theText.getBounds();\r\n\t\tconst boxColor = 0x000000;\r\n\t\tlet theTextBox = null;\r\n\t\ttheTextBox = this.add.rectangle(bounds.x, bounds.y, bounds.width + 20, bounds.height + 5,boxColor);\r\n\t\ttheTextBox.setPosition(bounds.x + bounds.width/2, bounds.y + bounds.height/2)\r\n\t\ttheTextBox.alpha = 0.5;\r\n\t\ttheTextBox.active = true\r\n\t\t// const bounds = this.gameText.getBounds();\r\n\t\t// const boxColor = 0x000000;\r\n\t\t// this.gameTextBox = null;\r\n\t\t// this.gameTextBox = this.add.rectangle(bounds.x, bounds.y, bounds.width + 20, bounds.height + 5,boxColor);\r\n\t\t// this.gameTextBox.setPosition(bounds.x + bounds.width/2, bounds.y + bounds.height/2)\r\n\t\t// this.gameTextBox.alpha = 0.5;\r\n\t\t// this.gameTextBox.active = true\r\n\t\t// rectangle.setStrokeStyle(2, strokeColor);\r\n\t\t// console.log(\"createTextbox\")\r\n\t\treturn theTextBox ;\r\n\t}\r\n\r\n\t// the argument for clearTextbox needs to be a rectangle\r\n\tclearTextbox (theTextBox) {\r\n\t\tif(theTextBox) {\r\n\t\t\ttheTextBox.active = false\r\n\t\t\tthis.scene.remove(theTextBox)\r\n\t\t\ttheTextBox.destroy()\r\n\t\t\t// this.gameTextBox.active = false\r\n\t\t\t// this.scene.remove(this.gameTextBox)\r\n\t\t\t// this.gameTextBox.destroy()\r\n\t\t\t// console.log(\"clearTextbox\")\r\n\t\t}\r\n\t}\r\n\r\n\tgameSoundMuteToggle () {\r\n\t\tif(!this.gameSoundMuted) {\r\n\t\t\t// console.log(\"muted\")\r\n\t\t\tthis.soundBtn.setTexture('mute');\r\n\t\t\tthis.gameSoundMuted = true;\r\n\t\t\tthis.sound.setMute(true);\r\n\t\t} else {\r\n\t\t\t// console.log(\"unMute\")\r\n\t\t\tthis.soundBtn.setTexture('unMute');\r\n\t\t\tthis.gameSoundMuted = false;\r\n\t\t\tthis.sound.setMute(false);\r\n\t\t}\r\n\t}\r\n\r\n\treplayLevel() {\r\n\t\tthis.bricks.clear(true);\r\n\t\tthis.refreshScene();\r\n\t\tthis.input.removeListener('pointerdown',this.shootball,this)\r\n\t\tthis.resetBallPan();\r\n\t\tthis.gameMusic.resume();\r\n\t}\r\n\r\n\trestartGame() {\r\n\t\tthis.currentLevel = 0;\r\n\t\tthis.refreshScene();\r\n\t\tthis.input.removeListener('pointerdown',this.shootball,this)\r\n\t\tthis.resetBallPan();\r\n\t\tthis.gameMusic.resume();\r\n\t}\r\n\r\n}\r\n\r\n\r\nexport default GameScene;"],"names":["GameScene","Phaser","Scene","constructor","super","key","active","this","gameSceneBackgroundImage","pan","panWidth","panHeight","cursors","panVel","balls","bricks","gameover","ground","platforms","ballWidth","ballYVel","ballOnPan","gameText","gameTextStyle","font","fill","align","wordWrap","width","screenWidth","gameTextFontDesktop","gameTextFontMobile","gameTextFont","gameTextBox","centerX","centerY","screenHeight","staticBricks","levels","currentLevel","gameMusic","gamePaused","gameInLevelTransition","spacebar","gameSoundMuted","soundBtn","levelText","levelTextStyle","levelTextBox","platformForPan","pointerMovementConstant","init","data","cameras","main","setBackgroundColor","preload","load","image","audio","json","handlePointerMove","pointer","setVelocityX","x","create","physics","resume","scale","displaySize","height","add","sprite","setScale","setCollideWorldBounds","setImmovable","pauseBtn","setDepth","setX","displayWidth","setY","displayHeight","setInteractive","useHandCursor","on","gamePause","gameSoundMuteToggle","levelsData","cache","get","group","addBallonPan","collider","panBallCollide","initializeLevel","input","shootBall","world","collidedWorld","brickSound","sound","volume","keyboard","addKey","Input","Keyboard","KeyCodes","SPACE","update","time","delta","countActive","gameOver","isPlaying","isPaused","play","JustDown","gameResume","ballHitBrick","ball","brick","getData","createBall","destroy","values","strength","transitionToNextLevel","y","setActive","setVisible","setBounce","allowGravity","body","onWorldBounds","setGravityY","enable","setCircle","setVelocity","panCollide","ballCollide","panCenter","left","halfWidth","ballCenter","console","log","the_ball","getFirst","speed","velocity","up","down","right","gameObject","pause","children","iterate","child","killAndHide","disableBody","text","setPosition","replayLevel","depth","createTextbox","createBricksForLevel","level","brickLayout","brickLayoutM","cellWidth","Math","floor","length","cellHeight","staticGroup","nRows","nCols","startX","startY","row","col","brickType","createBrick","existing","fillColor","strokeColor","item","rectangle","setStrokeStyle","setOrigin","setData","bricksForLevel","velocityIncrement","clearText","removeListener","shootball","resetBallPan","refreshScene","victory","clear","theText","theTextBox","setText","clearTextbox","restartGame","addEvent","delay","callback","delayPointerdown","callbackScope","bounds","getBounds","alpha","scene","remove","setTexture","setMute"],"sourceRoot":""}